<!-- debug="true" 输出记载日志配置文件的过程，方便日志配置文件加载错误分析 -->
<!-- scan="ture" 会自动扫描配置文件中发生的改动并应用 -->
<!-- additivity="false" 禁用日志累加（如果子类和父类都加载相同的appender，会导致日志输出两次） -->
<configuration debug="true" scan="ture" scanPeriod="1 seconds"
	packagingData="true">

	<!-- <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener" 
		/> -->
	<!-- By the way, setting debug="true" is strictly equivalent to installing 
		an OnConsoleStatusListener. -->
	<!-- <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener" 
		/> -->
	<!-- Logback-classic can scan for changes in its configuration file and 
		automatically reconfigure itself when the configuration file changes. By 
		default, the configuration file will be scanned for changes once every minute. 
		You can specify a different scanning period by setting the scanPeriod attribute 
		of the <configuration> element. Values can be specified in units of milliseconds, 
		seconds, minutes or hours. -->
	<!-- While useful, packaging data is expensive to compute, especially in 
		applications with frequent exceptions. -->

	<!-- appenders are cumulative -->

	<!-- <contextName>myAppName</contextName> -->
	<!-- As mentioned in an earlier chapter, every logger is attached to a logger 
		context. By default, the logger context is called "default". However, you 
		can set a different name with the help of the <contextName> configuration 
		directive. Note that once set, the logger context name cannot be changed. 
		Setting the context name is a simple and straightforward method in order 
		to distinguish between multiple applications logging to the same target. -->

	<property name="USER_HOME" value="./" />
	<variable name="USER_HOME" value="./log" />

	<!-- <property file="src/main/java/chapters/configuration/variables1.properties" 
		/> -->
	<!-- <property resource="resource1.properties" /> -->
	<!-- Example: Variable file (logback-examples/src/main/resources/chapters/configuration/variables1.properties) 
		USER_HOME=/home/sebastien -->
	<!-- USER_HOME=/home/sebastien fileName=myApp.log destination=${USER_HOME}/${fileName} -->

	<appender name="FILE" class="ch.qos.logback.core.FileAppender">
		<file>myApp.log</file>
		<!-- <file>${USER_HOME}/myApp.log</file> -->
		<!-- <fileNamePattern>./%d{yyyy-MM}/%d{yyyy-MM-dd}.log</fileNamePattern> -->

		<encoder>
			<pattern>%date %level [%thread] %logger{10} [%file:%line] %msg%n
			</pattern>
		</encoder>
	</appender>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -
				%msg%n</pattern>
		</encoder>
	</appender>

	<logger name="chapters.configuration" level="INFO">
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="chapters.configuration.Foo" level="DEBUG"
		additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>

	<root level="debug" withJansi="true">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</root>
</configuration>